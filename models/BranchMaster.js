// models/BranchMaster.js
const { DataTypes } = require("sequelize");
const sequelize = require("../config/database");

const BranchMaster = sequelize.define(
  "BranchMaster",
  {
    Id: {
      type: DataTypes.BIGINT,
      primaryKey: true,
      autoIncrement: true,
    },
    BranchName: { type: DataTypes.STRING(150), allowNull: false },
    BranchAdd1: { type: DataTypes.STRING(255) },
    BranchAdd2: { type: DataTypes.STRING(255) },
    BranchCity: { type: DataTypes.STRING(100) },
    BranchState: { type: DataTypes.STRING(100) },
    BranchPinCode: { type: DataTypes.STRING(20) },
    BranchTele: { type: DataTypes.STRING(50) },
    BranchFax: { type: DataTypes.STRING(50) },
    BranchEmail: { type: DataTypes.STRING(100) },
    VatTin: { type: DataTypes.STRING(50) },
    CstTin: { type: DataTypes.STRING(50) },
    LbtNo: { type: DataTypes.STRING(50) },
    ExciseECCNo: { type: DataTypes.STRING(50) },
    ExciseRegNo: { type: DataTypes.STRING(50) },
    ExciseDivision: { type: DataTypes.STRING(100) },
    ExciseDAdd1: { type: DataTypes.STRING(255) },
    ExciseDAdd2: { type: DataTypes.STRING(255) },
    ExciseRange: { type: DataTypes.STRING(100) },
    ExciseRAdd1: { type: DataTypes.STRING(255) },
    ExciseRAdd2: { type: DataTypes.STRING(255) },
    ExciseCollectrate: { type: DataTypes.STRING(100) },
    DivisionId: { type: DataTypes.BIGINT },
    SignatoryTitle: { type: DataTypes.STRING(50) },
    SignatoryName: { type: DataTypes.STRING(100) },
    CurrencyCode: { type: DataTypes.STRING(10) },
    IndSectorCode: { type: DataTypes.STRING(50) },
    IndSectorName: { type: DataTypes.STRING(100) },
    IndSSectorCode: { type: DataTypes.STRING(50) },
    IndSSectorName: { type: DataTypes.STRING(100) },
    ExciseApp: { type: DataTypes.BOOLEAN },
    ExciseType: { type: DataTypes.STRING(50) },
    BOMApp: { type: DataTypes.BOOLEAN },
    AutoIssueRM: { type: DataTypes.BOOLEAN },
    ProdProcess: { type: DataTypes.STRING(50) },
    StockBatchwise: { type: DataTypes.BOOLEAN },
    PurchaseBatchAuto: { type: DataTypes.BOOLEAN },
    ProductionBatchAuto: { type: DataTypes.BOOLEAN },
    Requisition: { type: DataTypes.BOOLEAN },
    PurchaseOrder: { type: DataTypes.BOOLEAN },
    ReqforPO: { type: DataTypes.BOOLEAN },
    POforPChallan: { type: DataTypes.BOOLEAN },
    GRN: { type: DataTypes.BOOLEAN },
    SalesOrder: { type: DataTypes.BOOLEAN },
    SOforSChallan: { type: DataTypes.BOOLEAN },
    PODateAuto: { type: DataTypes.BOOLEAN },
    SODateAuto: { type: DataTypes.BOOLEAN },
    AllowIssNegativeStk: { type: DataTypes.BOOLEAN },
    LHTopMargin: { type: DataTypes.DECIMAL(10, 2) },
    LHBottomMargin: { type: DataTypes.DECIMAL(10, 2) },
    LHLeftMargin: { type: DataTypes.DECIMAL(10, 2) },
    LHRightMargin: { type: DataTypes.DECIMAL(10, 2) },
    Jurisdiction: { type: DataTypes.STRING(100) },
    CreatedBy: { type: DataTypes.BIGINT },
    CreatedDate: { type: DataTypes.DATE, defaultValue: DataTypes.NOW },
    UpdatedBy: { type: DataTypes.BIGINT },
    UpdateDate: { type: DataTypes.DATE, defaultValue: DataTypes.NOW },
    STaxChoice: { type: DataTypes.BOOLEAN },
    StateCode: { type: DataTypes.STRING(20) },
    GSTinNo: { type: DataTypes.STRING(50) },
    GSTRegType: { type: DataTypes.STRING(50) },
    MRPSystem: { type: DataTypes.BOOLEAN },
    RateMaster: { type: DataTypes.BOOLEAN },
    DiscountMaster: { type: DataTypes.BOOLEAN },
    BankName: { type: DataTypes.STRING(100) },
    BankACNo: { type: DataTypes.STRING(50) },
    IFSCCode: { type: DataTypes.STRING(20) },
    BankBranch: { type: DataTypes.STRING(100) },
    ReqforProdIssue: { type: DataTypes.BOOLEAN },
    PO_As_Indent: { type: DataTypes.BOOLEAN },
    Create_PO_Auto: { type: DataTypes.BOOLEAN },
    In_DD_RcvdDate: { type: DataTypes.BOOLEAN },
    Allow_SO_EQ: { type: DataTypes.BOOLEAN },
    SO_EQ_Perc: { type: DataTypes.DECIMAL(5, 2) },
    Allow_PO_EQ: { type: DataTypes.BOOLEAN },
    PO_EQ_Perc: { type: DataTypes.DECIMAL(5, 2) },
    Package_Batch: { type: DataTypes.BOOLEAN },
    WIP_GCode: { type: DataTypes.STRING(50) },
    FG_GCode: { type: DataTypes.STRING(50) },
  },
  {
    tableName: "BranchMaster",
    timestamps: false,
  }
);

module.exports = BranchMaster;
